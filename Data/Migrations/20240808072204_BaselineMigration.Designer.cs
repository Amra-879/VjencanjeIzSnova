// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VjencanjeIzSnova_July.Data;

#nullable disable

namespace VjencanjeIzSnova_July.Data.Migrations
{
    [DbContext(typeof(VjencanjeIzSnovaDbContext))]
    [Migration("20240808072204_BaselineMigration")]
    partial class BaselineMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("PlanerKlijenti", b =>
                {
                    b.Property<int>("PlanerId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("planer_id");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("client_id");

                    b.HasKey("PlanerId", "ClientId")
                        .HasName("PK__PlanerKl__E4EB502E5A1C619D");

                    b.HasIndex("ClientId");

                    b.ToTable("PlanerKlijenti", (string)null);
                });

            modelBuilder.Entity("VjencanjeIzSnova_July.Models.Kategorije", b =>
                {
                    b.Property<int>("KategorijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("kategorija_id");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("naziv");

                    b.Property<string>("Opis")
                        .HasColumnType("TEXT")
                        .HasColumnName("opis");

                    b.HasKey("KategorijaId")
                        .HasName("PK__Kategori__487607FB19F75645");

                    b.ToTable("Kategorije", (string)null);
                });

            modelBuilder.Entity("VjencanjeIzSnova_July.Models.Klijent", b =>
                {
                    b.Property<int>("KlijentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("klijent_id");

                    b.Property<DateOnly?>("DatumVjenčanja")
                        .HasColumnType("TEXT")
                        .HasColumnName("datum_vjenčanja");

                    b.Property<string>("Grad")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("grad");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("ime");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("prezime");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("user_id");

                    b.HasKey("KlijentId")
                        .HasName("PK__Klijent__9D7F1ACABE38AB79");

                    b.HasIndex(new[] { "UserId" }, "UQ__Klijent__B9BE370E02949A1F")
                        .IsUnique();

                    b.ToTable("Klijent", (string)null);
                });

            modelBuilder.Entity("VjencanjeIzSnova_July.Models.Korisnici", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("user_id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("password");

                    b.Property<string>("ProfilnaSlikaUrl")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("ProfilnaSlikaUrl");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("user_type");

                    b.HasKey("UserId")
                        .HasName("PK__Korisnic__B9BE370F03FE7D68");

                    b.HasIndex(new[] { "Email" }, "UQ__Korisnic__AB6E6164532F21D4")
                        .IsUnique();

                    b.ToTable("Korisnici", (string)null);
                });

            modelBuilder.Entity("VjencanjeIzSnova_July.Models.Košarica", b =>
                {
                    b.Property<int>("KošaricaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("košarica_id");

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("cijena");

                    b.Property<int?>("ClientId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("client_id");

                    b.Property<string>("NazivArtikla")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("naziv_artikla");

                    b.HasKey("KošaricaId")
                        .HasName("PK__Košarica__4C4EEBFCF74FD176");

                    b.HasIndex("ClientId");

                    b.ToTable("Košarica", (string)null);
                });

            modelBuilder.Entity("VjencanjeIzSnova_July.Models.Partner", b =>
                {
                    b.Property<int>("PartnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("partner_id");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("ime");

                    b.Property<int?>("KategorijaId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("kategorija_id");

                    b.Property<string>("Mobitel")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT")
                        .HasColumnName("mobitel");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("user_id");

                    b.HasKey("PartnerId")
                        .HasName("PK__Partner__576F1B27720B1D72");

                    b.HasIndex("KategorijaId");

                    b.HasIndex(new[] { "UserId" }, "UQ__Partner__B9BE370ECFCA0A5E")
                        .IsUnique();

                    b.ToTable("Partner", (string)null);
                });

            modelBuilder.Entity("VjencanjeIzSnova_July.Models.Planer", b =>
                {
                    b.Property<int>("PlanerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("planer_id");

                    b.Property<int?>("BrTrenutnihKlijenata")
                        .HasColumnType("INTEGER")
                        .HasColumnName("br_trenutnih_klijenata");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("user_id");

                    b.Property<string>("ZoomMeetingLink")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("zoom_meeting_link");

                    b.HasKey("PlanerId")
                        .HasName("PK__Planer__BF194A6C68A607B5");

                    b.HasIndex(new[] { "UserId" }, "UQ__Planer__B9BE370EEF0010D4")
                        .IsUnique();

                    b.ToTable("Planer", (string)null);
                });

            modelBuilder.Entity("VjencanjeIzSnova_July.Models.Plaćanja", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("payment_id");

                    b.Property<int?>("ClientId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("client_id");

                    b.Property<decimal>("Iznos")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("iznos");

                    b.Property<DateTime>("PlacanjeDatum")
                        .HasColumnType("datetime")
                        .HasColumnName("placanje_datum");

                    b.Property<string>("TransakcijaId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("transakcija_id");

                    b.HasKey("PaymentId")
                        .HasName("PK__Plaćanja__ED1FC9EA615C8B2E");

                    b.HasIndex("ClientId");

                    b.ToTable("Plaćanja", (string)null);
                });

            modelBuilder.Entity("VjencanjeIzSnova_July.Models.Recenzije", b =>
                {
                    b.Property<int>("RecenzijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("recenzija_id");

                    b.Property<DateOnly>("Datum")
                        .HasColumnType("TEXT")
                        .HasColumnName("datum");

                    b.Property<int?>("KlijentId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("klijent_id");

                    b.Property<string>("Komentar")
                        .HasColumnType("TEXT")
                        .HasColumnName("komentar");

                    b.Property<double?>("Ocjena")
                        .HasColumnType("REAL")
                        .HasColumnName("ocjena");

                    b.Property<int?>("UslugaId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("partner_id");

                    b.HasKey("RecenzijaId")
                        .HasName("PK__Recenzij__020681BA242E6DDA");

                    b.HasIndex("KlijentId");

                    b.HasIndex("UslugaId");

                    b.ToTable("Recenzije", (string)null);
                });

            modelBuilder.Entity("VjencanjeIzSnova_July.Models.Rezervacije", b =>
                {
                    b.Property<int>("RezervacijeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("rezervacije_id");

                    b.Property<int?>("ClientId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("klijent_id");

                    b.Property<DateOnly>("Datum")
                        .HasColumnType("TEXT")
                        .HasColumnName("datum");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("pending")
                        .HasColumnName("status");

                    b.Property<int?>("UslugaId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("usluga_id");

                    b.HasKey("RezervacijeId")
                        .HasName("PK__Rezervac__4F18667E0FB39479");

                    b.HasIndex("ClientId");

                    b.HasIndex("UslugaId");

                    b.ToTable("Rezervacije", (string)null);
                });

            modelBuilder.Entity("VjencanjeIzSnova_July.Models.Slike", b =>
                {
                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("Url");

                    b.Property<int>("SlikaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UslugaId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("usluga_id");

                    b.HasKey("Url")
                        .HasName("PK__Slike__5B5B1F5A0E5504C4");

                    b.HasIndex("UslugaId");

                    b.ToTable("Slike", (string)null);
                });

            modelBuilder.Entity("VjencanjeIzSnova_July.Models.Usluge", b =>
                {
                    b.Property<int>("UslugaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("usluga_id");

                    b.Property<string>("CjenovniRang")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("cjenovniRang");

                    b.Property<string>("Detalji")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("detalji");

                    b.Property<string>("InfoOKompaniji")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("infoOKompaniji");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("naziv");

                    b.Property<string>("OpisUsluge")
                        .HasColumnType("TEXT")
                        .HasColumnName("opis");

                    b.Property<int>("PartnerId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("partner_id");

                    b.HasKey("UslugaId")
                        .HasName("PK__Usluge__188C4FFA9282855A");

                    b.HasIndex("PartnerId");

                    b.ToTable("Usluge", (string)null);
                });

            modelBuilder.Entity("PlanerKlijenti", b =>
                {
                    b.HasOne("VjencanjeIzSnova_July.Models.Klijent", null)
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("FK__PlanerKli__clien__5BE2A6F2");

                    b.HasOne("VjencanjeIzSnova_July.Models.Planer", null)
                        .WithMany()
                        .HasForeignKey("PlanerId")
                        .IsRequired()
                        .HasConstraintName("FK__PlanerKli__plane__5AEE82B9");
                });

            modelBuilder.Entity("VjencanjeIzSnova_July.Models.Klijent", b =>
                {
                    b.HasOne("VjencanjeIzSnova_July.Models.Korisnici", "User")
                        .WithOne("Klijent")
                        .HasForeignKey("VjencanjeIzSnova_July.Models.Klijent", "UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Klijent__user_id__3B75D760");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VjencanjeIzSnova_July.Models.Košarica", b =>
                {
                    b.HasOne("VjencanjeIzSnova_July.Models.Klijent", "Client")
                        .WithMany("Košaricas")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK__Košarica__client__5812160E");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("VjencanjeIzSnova_July.Models.Partner", b =>
                {
                    b.HasOne("VjencanjeIzSnova_July.Models.Kategorije", "Kategorija")
                        .WithMany("Partners")
                        .HasForeignKey("KategorijaId")
                        .HasConstraintName("FK__Partner__kategor__4222D4EF");

                    b.HasOne("VjencanjeIzSnova_July.Models.Korisnici", "User")
                        .WithOne("Partner")
                        .HasForeignKey("VjencanjeIzSnova_July.Models.Partner", "UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Partner__user_id__412EB0B6");

                    b.Navigation("Kategorija");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VjencanjeIzSnova_July.Models.Planer", b =>
                {
                    b.HasOne("VjencanjeIzSnova_July.Models.Korisnici", "User")
                        .WithOne("Planer")
                        .HasForeignKey("VjencanjeIzSnova_July.Models.Planer", "UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Planer__user_id__45F365D3");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VjencanjeIzSnova_July.Models.Plaćanja", b =>
                {
                    b.HasOne("VjencanjeIzSnova_July.Models.Klijent", "Client")
                        .WithMany("Plaćanjas")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK__Plaćanja__client__5535A963");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("VjencanjeIzSnova_July.Models.Recenzije", b =>
                {
                    b.HasOne("VjencanjeIzSnova_July.Models.Klijent", "Client")
                        .WithMany("Recenzijes")
                        .HasForeignKey("KlijentId")
                        .HasConstraintName("FK__Recenzije__klijent__5165187F");

                    b.HasOne("VjencanjeIzSnova_July.Models.Partner", "Partner")
                        .WithMany("Recenzijes")
                        .HasForeignKey("UslugaId")
                        .HasConstraintName("FK__Recenzije__usluga__52593CB8");

                    b.Navigation("Client");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("VjencanjeIzSnova_July.Models.Rezervacije", b =>
                {
                    b.HasOne("VjencanjeIzSnova_July.Models.Klijent", "Client")
                        .WithMany("Rezervacijes")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK__Rezervacije__klijent__4CA06362");

                    b.HasOne("VjencanjeIzSnova_July.Models.Usluge", "Usluga")
                        .WithMany("Rezervacijes")
                        .HasForeignKey("UslugaId")
                        .HasConstraintName("FK__Rezervacije__usluga__4D94879B");

                    b.Navigation("Client");

                    b.Navigation("Usluga");
                });

            modelBuilder.Entity("VjencanjeIzSnova_July.Models.Slike", b =>
                {
                    b.HasOne("VjencanjeIzSnova_July.Models.Usluge", "Usluga")
                        .WithMany("Slike")
                        .HasForeignKey("UslugaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Slike__usluga_id");

                    b.Navigation("Usluga");
                });

            modelBuilder.Entity("VjencanjeIzSnova_July.Models.Usluge", b =>
                {
                    b.HasOne("VjencanjeIzSnova_July.Models.Partner", "Partner")
                        .WithMany("Usluges")
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Usluge__partner___48CFD27E");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("VjencanjeIzSnova_July.Models.Kategorije", b =>
                {
                    b.Navigation("Partners");
                });

            modelBuilder.Entity("VjencanjeIzSnova_July.Models.Klijent", b =>
                {
                    b.Navigation("Košaricas");

                    b.Navigation("Plaćanjas");

                    b.Navigation("Recenzijes");

                    b.Navigation("Rezervacijes");
                });

            modelBuilder.Entity("VjencanjeIzSnova_July.Models.Korisnici", b =>
                {
                    b.Navigation("Klijent");

                    b.Navigation("Partner");

                    b.Navigation("Planer");
                });

            modelBuilder.Entity("VjencanjeIzSnova_July.Models.Partner", b =>
                {
                    b.Navigation("Recenzijes");

                    b.Navigation("Usluges");
                });

            modelBuilder.Entity("VjencanjeIzSnova_July.Models.Usluge", b =>
                {
                    b.Navigation("Rezervacijes");

                    b.Navigation("Slike");
                });
#pragma warning restore 612, 618
        }
    }
}
